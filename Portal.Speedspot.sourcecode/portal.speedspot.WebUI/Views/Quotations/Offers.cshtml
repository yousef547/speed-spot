
@model IList<QuotationOfferViewModel>

@{
    ViewData["Title"] = SharedLocalizer["Offers"];
    ViewData["Level1Section"] = SharedLocalizer["Sales"];
    ViewData["Level2Section"] = SharedLocalizer["Quotations"];
    ViewData["Level2Url"] = Url.Action("Index");
}

@if ((bool)ViewData["AddOfferEnabled"])
{
    <div class="row justify-content-end mb-2">
        <div class="col-md-12">
            <a class="btn btn-primary show-loader" asp-action="AddOffer" asp-route-id="@ViewData["QuotationId"]">@SharedLocalizer["AddOffer"]</a>
        </div>
    </div>
}

<div class="row mx-4" id="offers">
    <div class="col-md-12">
        @await Html.PartialAsync("_OffersPartial", Model, new ViewDataDictionary(ViewData) { { "ShowFinishButton", true } })
    </div>
</div>

@section Scripts{
    <script src="~/js/quotations.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var clickFn = function () {
                var tr = $(this).closest('tr');
                var row = table.api().row(tr);
                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                } else {
                    // Open this row
                    let itemId = row.data()["DT_RowId"];
                    $.get(`/Quotations/GetAlternateVersionData?versionId=${itemId}`, function (result) {
                        row.child(result).show();
                        tr.addClass('shown');
                    })
                }
            }

            let table = handleDataTable({
                selector: ".table-offers",
                childClickFn: clickFn,
                paging: false
            });
        })
    </script>
}