@model List<UserViewModel>

<table class="table table-head-fixed tables-user-home">
    <thead>
        <tr>
            <th class="user-name">
                @SharedLocalizer["Name"]
            </th>
            <th class="user-name">
                @SharedLocalizer["Email"]
            </th>
            <th class="user-name">
                @SharedLocalizer["DepartmentId"]
            </th>
            <th class="user-name">
                @SharedLocalizer["PhoneNumber"]
            </th>
            <th class="user-name">
                @SharedLocalizer["EmployeeType"]
            </th>
            <th class="user-name">
                @SharedLocalizer["Actions"]
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="">
                    <span class="name-details one-line">
                        @item.FirstName @item.LastName
                    </span>
                </td>
                <td class="">
                    <span class="name-details one-line">
                        @item.Email
                    </span>
                </td>
                <td class="">
                    <span class="name-details one-line">
                        @(SharedLocalizer.IsRightToLeft()? item.DepartmentNameAr: item.DepartmentName)
                    </span>
                </td>
                <td class="">
                    <span class="name-details one-line">
                        <a href="tel:@item.PhoneNumber">
                            @item.PhoneNumber
                        </a>
                    </span>
                </td>
                <td class="">
                    <span class="name-details one-line">
                        @(SharedLocalizer.IsRightToLeft()? item.EmployeeTypeNameAr: item.EmployeeTypeName)
                    </span>
                </td>
                <td class="actions-table-btn min-w-250">
                    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.Details)).Succeeded)
                    {
                        <button class="btn btn-info info-details my-1" onclick="getUserInfo('@item.Id')">
                            <i class="fas fa-info"></i>
                        </button>
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.SendConfirmationEmail)).Succeeded)
                    {
                        if (!item.EmailConfirmed)
                        {
                            <a class="btn btn-sendemail  show-loader" asp-action="SendConfirmationEmail" asp-route-id="@item.Id" title="@SharedLocalizer["SendConfirmationEmail"]">
                                <i class="far fa-envelope-open"></i>
                            </a>
                        }
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.Edit)).Succeeded)
                    {
                        <a class="btn btn-edit show-loader-ajax" asp-action="Edit" asp-route-id="@item.Id" title="@SharedLocalizer["Edit"]">
                            <i class="far fa-edit"></i>
                        </a>
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.Delete)).Succeeded)
                    {
                        if (!item.IsArchived)
                        {
                            <a data-toggle="confirmation"
                               class="btn btn-delete users-confirm-delete"
                               data-source="archiveUsers"
                               data-itemid="@item.Id">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        }
                        else
                        {
                            <a class="btn btn-delete-unarchive show-loader users-confirm-delete" data-source="unArchiveUsers" data-itemid="@item.Id" title="@SharedLocalizer["Unarchive"]">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        }
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.ManageRoles)).Succeeded)
                    {
                        <a class="btn btn-manage show-loader" asp-action="UserRoles" asp-route-id="@item.Id" title="@SharedLocalizer["ManageRoles"]">
                            <i class="fas fa-key"></i>
                        </a>
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.ManageDepartments)).Succeeded)
                    {
                        <a class="btn btn-manage show-loader" asp-action="UserDepartments" asp-route-id="@item.Id" title="@SharedLocalizer["ManageDepartments"]">
                            <i class="fas fa-building"></i>
                        </a>
                    }
                    @if ((await AuthorizationService.AuthorizeAsync(User, Permissions.Users.ResetPassword)).Succeeded)
                    {
                        <a class="btn btn-resete show-loader" asp-action="ResetPassword" asp-route-id="@item.Id" title="@SharedLocalizer["ResetPassword"]">
                            <i class="fas fa-lock"></i>
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
